name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for coverage history
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Cache pip dependencies
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coverage[toml]
    
    - name: Run tests with coverage
      env:
        MEETUP_API_KEY: ${{ secrets.MEETUP_API_KEY || 'dummy_key' }}
        EVENTBRITE_API_KEY: ${{ secrets.EVENTBRITE_API_KEY || 'dummy_key' }}
      run: |
        python -m pytest --cov=src --cov-report=xml --cov-report=term-missing --junitxml=test-results.xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.python-version }}
        fail_ci_if_error: true
        verbose: true
    
    - name: Upload test results
      if: always()  # Upload test results even if tests fail
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test-results.xml
          coverage.xml
        retention-days: 30
    
    - name: Coverage Report
      run: |
        echo "Coverage Report:"
        python -m coverage report